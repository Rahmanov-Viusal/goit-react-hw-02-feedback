{"version":3,"sources":["components/Statistics/Statistic.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","btn","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistic__list","statistic__item","Section","title","children","section","Notification","message","this","props","Component","Container","container","App","state","target","feedback","dataset","console","log","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,gBAAkB,mCAAmC,gBAAkB,qC,qBCAzFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,mKCqBfC,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBD,EAAQE,KAAI,SAAAC,GAAM,OAChB,wBACEC,UAAWC,IAAEC,IAEbC,KAAK,SACL,gBAAeJ,EACfK,QAASP,EALX,SAOGE,GALIA,O,gBCkBIM,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIV,UAAWC,IAAEU,gBAAjB,UACE,qBAAIX,UAAWC,IAAEW,gBAAjB,kBAAwCN,KACxC,qBAAIN,UAAWC,IAAEW,gBAAjB,qBAA2CL,KAC3C,qBAAIP,UAAWC,IAAEW,gBAAjB,iBAAuCJ,KACvC,qBAAIR,UAAWC,IAAEW,gBAAjB,mBAAyCH,KACzC,qBAAIT,UAAWC,IAAEW,gBAAjB,+BACqBF,EADrB,W,gBCOSG,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASf,UAAWC,IAAEe,QAAtB,UACGF,GAAS,oBAAId,UAAWC,IAAEa,MAAjB,SAAyBA,IAClCC,M,iBCJDE,E,4JACJ,WACE,OAAO,mBAAGjB,UAAWC,IAAEiB,QAAhB,SAA0BC,KAAKC,MAAMF,c,GAFrBG,aAUZJ,I,iBCFAK,MARf,YAAkC,IAAbP,EAAY,EAAZA,SACnB,OAAO,qBAAKf,UAAWC,IAAEsB,UAAlB,SAA8BR,KCEjCS,E,4MACJC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPX,gBAAkB,YAAiB,IAAd6B,EAAa,EAAbA,OACXC,EAAaD,EAAOE,QAApBD,SACRE,QAAQC,IAAIJ,EAAOE,SACnB,EAAKG,UAAS,SAAAC,GAAS,sBAAQL,EAAWK,EAAUL,GAAY,O,EAElEM,mBAAqB,WACnB,MAA+B,EAAKR,MACpC,OADA,EAAQnB,KAAR,EAAcC,QAAd,EAAuBC,K,EAGzB0B,gCAAkC,WAChC,IAAQ5B,EAAS,EAAKmB,MAAdnB,KACFG,EAAQ,EAAKwB,qBACnB,OAAOxB,EAAQ0B,KAAKC,MAAO9B,EAAOG,EAAS,KAAO,G,4CAEpD,WACE,MAA+BU,KAAKM,MAA5BnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQU,KAAKc,qBACbvB,EAAqBS,KAAKe,kCAC1BrC,EAAkBsB,KAAKtB,gBACvBD,EAAUyC,OAAOC,KAAKnB,KAAKM,OAEjC,OACE,eAAC,EAAD,CAAWzB,UAAU,MAArB,UACE,cAAC,EAAD,CAASc,MAAO,wBAAhB,SACE,cAAC,EAAD,CACElB,QAASA,EACTC,gBAAiBA,MAGrB,cAAC,EAAD,CAASiB,MAAO,aAAhB,SACGL,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcQ,QAAQ,+B,GA7ChBG,aAqDHG,ICvDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.edd7fa61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic__list\":\"Statistic_statistic__list__16dvK\",\"statistic__item\":\"Statistic_statistic__item__1HOW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1rp9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import React from \"react\";\nimport s from \"./FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\n  options.map(option => (\n    <button\n      className={s.btn}\n      key={option}\n      type=\"button\"\n      data-feedback={option}\n      onClick={onLeaveFeedback}\n    >\n      {option}\n    </button>\n  ));\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistic.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={s.statistic__list}>\n      <li className={s.statistic__item}>good:{good}</li>\n      <li className={s.statistic__item}>neutral:{neutral}</li>\n      <li className={s.statistic__item}>bad:{bad}</li>\n      <li className={s.statistic__item}>total:{total}</li>\n      <li className={s.statistic__item}>\n        Positive feedback:{positivePercentage}%\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport s from \"./Section.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport s from \"./Notification.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass Notification extends Component {\n  render() {\n    return <p className={s.message}>{this.props.message}</p>;\n  }\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport s from \"./Container.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { Component } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\nimport Container from \"./components/Container\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    console.log(target.dataset);\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const onLeaveFeedback = this.onLeaveFeedback;\n    const options = Object.keys(this.state);\n\n    return (\n      <Container className=\"App\">\n        <Section title={\"please leave feedback\"}>\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title={\"statistics\"}>\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}